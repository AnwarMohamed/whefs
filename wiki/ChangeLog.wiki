#summary Overview of changes from one version to the next
#labels Category-UserDocs,Featured

This is the informal change list for whefs releases. Newest items are at the top. Only an overview is provided here - the exact list of changes is tracked only via the source repository.

----

*26 June 2009*
  * Removed the full-string cache altogether. It _might_ be reintroduced in another form, but it's not on the immediate to-do list. The hash cache gives us 95% of what we need and requires much less memory.
  * Fixed a memleak of an inode name in `whefs_fclose()` when (ironically enough) the static allocators were enabled.
  * It is now possible to toggle the inode hash cache on/off at runtime on a per-EFS basis. Leaving it on is highly recommended, but a large EFS (lots of entries) will require relatively large amounts of memory for the cache (about 8 bytes/entry).

*23 June 2009*
  * All of the EFS caching elements can now be disabled at compile time. Work is underway to make them runtime-togglable.
  * Read-only EFSes are no longer mmap()ed because profiling shows read-heavy uses to be slowed down by this.
  * Added `whio_dev_api::iomode()` so downstream clients can ask the device about its read/write mode.

*22 June 2009*
  * Added optional support for `mmap()`ing file-based storage, which can speed up access. In some simple benchmarks `mmap()`ing cut the number of disk seek operations by about 75%.
  * Other (only incidentally related) optimizations cut the overall number of seeks considerably compared to the `mmap()`-reduced number (approximately 50% reduction in one test), but these changes also affect non-`mmap()`ed files.
  * Prettied up the output from [WhefsLs whefs-ls].

*21 June 2009*
  * Added the [WhefsCat whefs-cat] tool.

*20 June 2009*
  * Added `whefs_stream_open()` to provide sequential-only access to a pseudofile. This simplifies using pseudofiles together with `whio_stream_gzip()`, `whio_stream_copy()`, etc.
  * Fixed Issue #6, where closing an EFS while there are open pseudofiles would leak a file/device handle. They are now closed automatically during `whefs_fs_finalize()` if the client fails to close them beforehand.

*19 June 2009*
  * Added public `whefs_fs_entry` type and `whefs_fs_entry_foreach()` to iterate over all in-use EFS entries.
  *  First packaged release.